<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PlanDAO">

	<!-- 서비스 플랜 결제 -->
	<insert id="planPayment" parameterType="plan">
	    INSERT INTO PLAN_APPLY (PLAN_APPLY_CODE, PAYMENT_DATE, PLAN_START, PLAN_END, PLAN_CODE, CARD_CODE, plan_apply_yn)
	    VALUES (s_plan_apply_code.NEXTVAL, SYSDATE, SYSDATE, SYSDATE + 
	        CASE WHEN #{plan_code} IN (1, 3) THEN 30 ELSE 365 END, 
	        #{plan_code}, #{card_code}, 'Y')
	</insert>
	
	<!-- 서비스 플랜 결제 시 등급 업그레이드 -->
	<update id="memPlanUpgrade" parameterType="plan">
	    UPDATE member SET mem_plan = (SELECT PLAN_NAME FROM PLAN WHERE PLAN_CODE=#{plan_code})
	    WHERE MEM_CODE = (SELECT MEM_CODE FROM CARD WHERE CARD_CODE=#{card_code})
	</update>
	
	<!-- (Scheduled) 서비스 플랜 기간 만료시 등급 다운그레이드 (연간 결제용) -->
	<update id="memPlanDowngrade" parameterType="plan">
	<!-- FROM절에 SELECT 사용 -->
	<!-- <![CDATA[
		UPDATE member SET mem_plan = 'basic' WHERE MEM_CODE = (SELECT MEM_CODE FROM 
		(SELECT CARD.MEM_CODE FROM CARD WHERE CARD_CODE = (SELECT CARD_CODE FROM 
		(SELECT CARD_CODE FROM PLAN_APPLY WHERE PLAN_END < SYSDATE ORDER BY PLAN_END DESC) 
        WHERE ROWNUM = 1)))
		]]> -->
		
	<!-- WITH절 사용 -->
	<![CDATA[
		UPDATE member SET mem_plan = 'basic' WHERE MEM_CODE =
		(WITH LatestPlan AS (SELECT CARD_CODE FROM PLAN_APPLY WHERE PLAN_END < SYSDATE ORDER BY PLAN_END DESC)
    	SELECT MEM_CODE FROM CARD WHERE CARD_CODE = (SELECT CARD_CODE FROM LatestPlan WHERE ROWNUM = 1))
    	]]>
	</update>
	
	<!-- (Scheduled) 서비스 플랜 기간 시작시 등급 업그레이드 -->
	<update id="autoMemPlanUpgrade" parameterType="plan">
	<![CDATA[
		UPDATE member m SET m.mem_plan = (
		    SELECT p.plan_name
		    FROM plan_apply pa
		    JOIN card c ON pa.card_code = c.card_code
		    JOIN plan p ON pa.plan_code = p.plan_code
		    WHERE pa.plan_start >= SYSDATE
		    AND pa.plan_apply_yn = 'Y'
		    AND c.mem_code = m.mem_code)
		WHERE m.mem_code IN (SELECT DISTINCT c.mem_code
		    FROM plan_apply pa
		    JOIN card c ON pa.card_code = c.card_code
		    WHERE pa.plan_start >= SYSDATE
		    AND pa.plan_apply_yn = 'Y')
    	]]>
	</update>
	
	<!-- 자동결제 - 월간 서비스 플랜 결제 시 다음달 자동결제 (하지만 결제여부는 'N') -->
	<insert id="autoPlanPayment" parameterType="plan">
	     INSERT INTO PLAN_APPLY (PLAN_APPLY_CODE, PAYMENT_DATE, PLAN_START, PLAN_END, PLAN_CODE, CARD_CODE, plan_apply_yn)
	     VALUES (s_plan_apply_code.NEXTVAL, '', SYSDATE + 31, SYSDATE + 61, #{plan_code}, #{card_code}, 'N')
	</insert>
	
	<!-- (Scheduled) 자동결제 - PLAN_END < SYSDATE 일때 결제일자 변경 (결제여부 'Y'로 변경)  -->
	<update id="updateAutoPlanPayment" parameterType="plan">
		<![CDATA[
		UPDATE PLAN_APPLY SET PAYMENT_DATE = SYSDATE, PLAN_APPLY_YN = 'Y' WHERE PLAN_END < SYSDATE AND PLAN_APPLY_YN = 'N'
		]]>
	</update>
	
	<!-- (Scheduled) 자동결제 - PLAN_END < SYSDATE 일때 월간 서비스 플랜 결제 시 다음달 자동결제 (하지만 결제여부는 'N') -->
	<insert id="autoPlanPaymentAfterPlanEnd" parameterType="plan">
	<![CDATA[
		INSERT INTO PLAN_APPLY (PLAN_APPLY_CODE, PAYMENT_DATE, PLAN_START, PLAN_END, PLAN_CODE, CARD_CODE, plan_apply_yn)
		SELECT s_plan_apply_code.NEXTVAL, '', 
		       PA.PLAN_END + 1 AS PLAN_START,
		       ADD_MONTHS(PA.PLAN_END + 1, 1) AS PLAN_END,
		       PA.PLAN_CODE, PA.CARD_CODE, 'N'
		FROM (
		    SELECT pa.CARD_CODE, pa.PLAN_CODE, MAX(pa.PLAN_END) AS PLAN_END
		    FROM PLAN_APPLY pa
		    LEFT JOIN PLAN_CANCEL pc ON pa.PLAN_APPLY_CODE = pc.PLAN_APPLY_CODE
		    WHERE pa.PLAN_APPLY_YN = 'Y'
		    AND pc.PLAN_APPLY_CODE IS NULL
		    AND pa.PLAN_END < SYSDATE
		    GROUP BY pa.CARD_CODE, pa.PLAN_CODE
		) PA
    ]]>
	</insert>
	
	<!-- 서비스 플랜 업그레이드 시 직전 자동결제 삭제 -->
	<delete id="deletePrevPlanAfterPlanUpgrade" parameterType="plan">
	    DELETE FROM PLAN_APPLY
	    WHERE PLAN_END = (SELECT MAX(PLAN_END) FROM PLAN_APPLY
	        WHERE PLAN_APPLY_YN = 'N' AND CARD_CODE = #{card_code})
	</delete>


	<!-- 서비스 플랜 업그레이드 -->
	<insert id="planUpgrade" parameterType="plan">
	<!-- FROM절에 SELECT 사용 -->
	<!-- INSERT INTO PLAN_APPLY (PLAN_APPLY_CODE, PAYMENT_DATE, PLAN_START, PLAN_END, PLAN_CODE, CARD_CODE)
	    SELECT s_plan_apply_code.NEXTVAL, SYSDATE, 
	           PLAN_END + 1, PLAN_END + 31, #{plan_code}, #{card_code}
	    FROM (
	        SELECT PLAN_END
	        FROM PLAN_APPLY
	        WHERE CARD_CODE = #{card_code} AND PLAN_END > SYSDATE
	        ORDER BY PLAN_END DESC
	    ) WHERE ROWNUM = 1 -->
	    
	<!-- WITH절 사용 -->
		INSERT INTO PLAN_APPLY (PLAN_APPLY_CODE, PAYMENT_DATE, PLAN_START, PLAN_END, PLAN_CODE, CARD_CODE, plan_apply_yn)
	    WITH LatestPlan AS (
	        SELECT PLAN_END
	        FROM PLAN_APPLY
	        WHERE CARD_CODE = #{card_code} AND PLAN_END > SYSDATE
	        ORDER BY PLAN_END DESC
	    )
	    SELECT s_plan_apply_code.NEXTVAL, '', 
	           LP.PLAN_END + 1, LP.PLAN_END + 31, #{plan_code}, #{card_code}, 'N'
	    FROM LatestPlan LP
	    WHERE ROWNUM = 1
	</insert>
	
	
	<!-- 미사용 -->
	<!-- 자동결제 취소 - 취소 테이블이 인서트 -->
	<insert id="cancelAutoPlanPayment" parameterType="plan">
	</insert>
	
	<!-- 미사용 -->
	<!-- 자동결제 취소 - 월간 서비스 플랜 다음달 결제내역 삭제 -->
	<delete id="updateCancelAutoPlanPayment" parameterType="plan">
		DELETE FROM plan_apply
		WHERE card_code = #{card_code}
		AND plan_apply_code = (
		    SELECT MAX(plan_apply_code)
		    FROM plan_apply
		    WHERE card_code = #{card_code}
		    AND plan_apply_yn = 'N');
	</delete>
	
	<!-- 결제된 서비스 플랜 내역 가져오기 -->
	<select id="getPlanPaymentList" parameterType="plan" resultType="plan">
		SELECT ROWNUM AS PLAN_PAYMENT_NO, P.PLAN_NAME,
		       TO_CHAR(PA.PAYMENT_DATE, 'YYYY-MM-DD') AS PAYMENT_DATE,
		       TO_CHAR(PA.PLAN_START, 'YYYY-MM-DD') AS PLAN_START,
		       TO_CHAR(PA.PLAN_END, 'YYYY-MM-DD') AS PLAN_END,
		       (SELECT TO_CHAR(MIN(PA_NEXT.PLAN_START), 'YYYY-MM-DD') AS NEXT_PLAN_START
		        FROM PLAN_APPLY PA_NEXT
		        WHERE PA_NEXT.PLAN_APPLY_YN = 'N'
		        AND PA_NEXT.CARD_CODE = PA.CARD_CODE
		        AND PA_NEXT.PLAN_START > PA.PLAN_END) AS NEXT_PLAN_START,
		       P.PLAN_PRICE, C.CARD_NAME, C.CARD_NO
		FROM PLAN P, PLAN_APPLY PA, CARD C, MEMBER M
		WHERE P.PLAN_CODE = PA.PLAN_CODE
		<!-- AND PA.PLAN_APPLY_YN = 'Y' -->
		AND PA.CARD_CODE = C.CARD_CODE
		AND C.MEM_CODE = M.MEM_CODE
		AND M.MEM_CODE = #{mem_code}
		ORDER BY PLAN_PAYMENT_NO DESC
	</select>
	
</mapper>

